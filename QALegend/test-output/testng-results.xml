<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="12" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-01-04T16:03:11 IST" name="Suite" finished-at="2025-01-04T16:04:17 IST" duration-ms="66032">
    <groups>
      <group name="Regression">
        <method signature="QALegendClientsTest.addClients()[pri:0, instance:TestScript.QALegendClientsTest@59cba5a]" name="addClients" class="TestScript.QALegendClientsTest"/>
      </group> <!-- Regression -->
      <group name="smoke">
        <method signature="QALegendAnnouncementTest.addAnnouncement()[pri:0, instance:TestScript.QALegendAnnouncementTest@6f19ac19]" name="addAnnouncement" class="TestScript.QALegendAnnouncementTest"/>
        <method signature="QALegendEventTest.addEvent()[pri:0, instance:TestScript.QALegendEventTest@6676f6a0]" name="addEvent" class="TestScript.QALegendEventTest"/>
        <method signature="QALegendMessageTest.verifyComposeMessage()[pri:0, instance:TestScript.QALegendMessageTest@4397ad89]" name="verifyComposeMessage" class="TestScript.QALegendMessageTest"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2025-01-04T16:03:11 IST" name="Test" finished-at="2025-01-04T16:04:17 IST" duration-ms="66032">
      <class name="TestScript.QALegendProjectTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendProjectTest@1bd39d3c]" started-at="2025-01-04T16:03:45 IST" name="browserintialization" finished-at="2025-01-04T16:03:47 IST" duration-ms="1234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="verifyAddProject()[pri:0, instance:TestScript.QALegendProjectTest@1bd39d3c]" started-at="2025-01-04T16:03:47 IST" name="verifyAddProject" finished-at="2025-01-04T16:03:51 IST" duration-ms="3949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddProject -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendProjectTest@1bd39d3c]" started-at="2025-01-04T16:03:51 IST" name="afterMethod" finished-at="2025-01-04T16:03:51 IST" duration-ms="131" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddProject status=SUCCESS method=QALegendProjectTest.verifyAddProject()[pri:0, instance:TestScript.QALegendProjectTest@1bd39d3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendProjectTest -->
      <class name="TestScript.QALegendNoteTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendNoteTest@341814d3]" started-at="2025-01-04T16:03:28 IST" name="browserintialization" finished-at="2025-01-04T16:03:31 IST" duration-ms="2379" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="verifyAddNoteTest()[pri:0, instance:TestScript.QALegendNoteTest@341814d3]" started-at="2025-01-04T16:03:31 IST" name="verifyAddNoteTest" finished-at="2025-01-04T16:03:35 IST" duration-ms="4019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAddNoteTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendNoteTest@341814d3]" started-at="2025-01-04T16:03:35 IST" name="afterMethod" finished-at="2025-01-04T16:03:35 IST" duration-ms="129" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyAddNoteTest status=SUCCESS method=QALegendNoteTest.verifyAddNoteTest()[pri:0, instance:TestScript.QALegendNoteTest@341814d3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendNoteTest -->
      <class name="TestScript.QALegendLoginTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:12 IST" name="browserintialization" finished-at="2025-01-04T16:04:13 IST" duration-ms="1401" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="checkValidLogin()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:13 IST" name="checkValidLogin" finished-at="2025-01-04T16:04:14 IST" duration-ms="893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:14 IST" name="afterMethod" finished-at="2025-01-04T16:04:14 IST" duration-ms="112" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkValidLogin status=SUCCESS method=QALegendLoginTest.checkValidLogin()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:14 IST" name="browserintialization" finished-at="2025-01-04T16:04:16 IST" duration-ms="1590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="checkinValidLogin()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:16 IST" name="checkinValidLogin" finished-at="2025-01-04T16:04:17 IST" duration-ms="981" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkinValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2]" started-at="2025-01-04T16:04:17 IST" name="afterMethod" finished-at="2025-01-04T16:04:17 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkinValidLogin status=SUCCESS method=QALegendLoginTest.checkinValidLogin()[pri:0, instance:TestScript.QALegendLoginTest@768fc0f2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendLoginTest -->
      <class name="TestScript.QALegendMessageTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendMessageTest@4397ad89]" started-at="2025-01-04T16:03:35 IST" name="browserintialization" finished-at="2025-01-04T16:03:36 IST" duration-ms="1378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="verifyComposeMessage()[pri:0, instance:TestScript.QALegendMessageTest@4397ad89]" started-at="2025-01-04T16:03:36 IST" name="verifyComposeMessage" finished-at="2025-01-04T16:03:40 IST" duration-ms="3515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyComposeMessage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendMessageTest@4397ad89]" started-at="2025-01-04T16:03:40 IST" name="afterMethod" finished-at="2025-01-04T16:03:40 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyComposeMessage status=SUCCESS method=QALegendMessageTest.verifyComposeMessage()[pri:0, instance:TestScript.QALegendMessageTest@4397ad89] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendMessageTest -->
      <class name="TestScript.QALegendEditEventTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendEditEventTest@3d246ea3]" started-at="2025-01-04T16:03:25 IST" name="browserintialization" finished-at="2025-01-04T16:03:26 IST" duration-ms="1341" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="editEventTestCases()[pri:0, instance:TestScript.QALegendEditEventTest@3d246ea3]" started-at="2025-01-04T16:03:26 IST" name="editEventTestCases" finished-at="2025-01-04T16:03:28 IST" duration-ms="1901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editEventTestCases -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendEditEventTest@3d246ea3]" started-at="2025-01-04T16:03:28 IST" name="afterMethod" finished-at="2025-01-04T16:03:28 IST" duration-ms="116" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editEventTestCases status=SUCCESS method=QALegendEditEventTest.editEventTestCases()[pri:0, instance:TestScript.QALegendEditEventTest@3d246ea3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendEditEventTest -->
      <class name="TestScript.QALegendEventTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendEventTest@6676f6a0]" started-at="2025-01-04T16:03:11 IST" name="browserintialization" finished-at="2025-01-04T16:03:14 IST" duration-ms="2709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="addEvent()[pri:0, instance:TestScript.QALegendEventTest@6676f6a0]" started-at="2025-01-04T16:03:14 IST" name="addEvent" finished-at="2025-01-04T16:03:25 IST" duration-ms="10941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addEvent -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendEventTest@6676f6a0]" started-at="2025-01-04T16:03:25 IST" name="afterMethod" finished-at="2025-01-04T16:03:25 IST" duration-ms="111" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addEvent status=SUCCESS method=QALegendEventTest.addEvent()[pri:0, instance:TestScript.QALegendEventTest@6676f6a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendEventTest -->
      <class name="TestScript.QALegendClientsTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendClientsTest@59cba5a]" started-at="2025-01-04T16:03:40 IST" name="browserintialization" finished-at="2025-01-04T16:03:41 IST" duration-ms="1627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="addClients()[pri:0, instance:TestScript.QALegendClientsTest@59cba5a]" started-at="2025-01-04T16:03:41 IST" name="addClients" finished-at="2025-01-04T16:03:45 IST" duration-ms="3880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addClients -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendClientsTest@59cba5a]" started-at="2025-01-04T16:03:45 IST" name="afterMethod" finished-at="2025-01-04T16:03:45 IST" duration-ms="132" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addClients status=SUCCESS method=QALegendClientsTest.addClients()[pri:0, instance:TestScript.QALegendClientsTest@59cba5a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendClientsTest -->
      <class name="TestScript.QALegendEditAnnouncementTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendEditAnnouncementTest@119cbf96]" started-at="2025-01-04T16:03:55 IST" name="browserintialization" finished-at="2025-01-04T16:03:56 IST" duration-ms="1588" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="editannouncementTestCases()[pri:0, instance:TestScript.QALegendEditAnnouncementTest@119cbf96]" started-at="2025-01-04T16:03:56 IST" name="editannouncementTestCases" finished-at="2025-01-04T16:03:58 IST" duration-ms="1544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editannouncementTestCases -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendEditAnnouncementTest@119cbf96]" started-at="2025-01-04T16:03:58 IST" name="afterMethod" finished-at="2025-01-04T16:03:58 IST" duration-ms="106" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=editannouncementTestCases status=SUCCESS method=QALegendEditAnnouncementTest.editannouncementTestCases()[pri:0, instance:TestScript.QALegendEditAnnouncementTest@119cbf96] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendEditAnnouncementTest -->
      <class name="TestScript.QALegendAnnouncementTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendAnnouncementTest@6f19ac19]" started-at="2025-01-04T16:03:51 IST" name="browserintialization" finished-at="2025-01-04T16:03:52 IST" duration-ms="1247" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="addAnnouncement()[pri:0, instance:TestScript.QALegendAnnouncementTest@6f19ac19]" started-at="2025-01-04T16:03:52 IST" name="addAnnouncement" finished-at="2025-01-04T16:03:55 IST" duration-ms="2658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAnnouncement -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendAnnouncementTest@6f19ac19]" started-at="2025-01-04T16:03:55 IST" name="afterMethod" finished-at="2025-01-04T16:03:55 IST" duration-ms="102" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAnnouncement status=SUCCESS method=QALegendAnnouncementTest.addAnnouncement()[pri:0, instance:TestScript.QALegendAnnouncementTest@6f19ac19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendAnnouncementTest -->
      <class name="TestScript.QALegendTicketTest">
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:03:58 IST" name="browserintialization" finished-at="2025-01-04T16:03:59 IST" duration-ms="1356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="verifyTicketAssignment()[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:03:59 IST" name="verifyTicketAssignment" finished-at="2025-01-04T16:04:04 IST" duration-ms="4616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketAssignment -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:04:04 IST" name="afterMethod" finished-at="2025-01-04T16:04:04 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketAssignment status=SUCCESS method=QALegendTicketTest.verifyTicketAssignment()[pri:0, instance:TestScript.QALegendTicketTest@71329995] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="browserintialization()[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:04:04 IST" name="browserintialization" finished-at="2025-01-04T16:04:06 IST" duration-ms="1908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserintialization -->
        <test-method signature="verifyTicketMarkedAsClosed()[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:04:06 IST" name="verifyTicketMarkedAsClosed" finished-at="2025-01-04T16:04:12 IST" duration-ms="5857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTicketMarkedAsClosed -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:TestScript.QALegendTicketTest@71329995]" started-at="2025-01-04T16:04:12 IST" name="afterMethod" finished-at="2025-01-04T16:04:12 IST" duration-ms="160" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTicketMarkedAsClosed status=SUCCESS method=QALegendTicketTest.verifyTicketMarkedAsClosed()[pri:0, instance:TestScript.QALegendTicketTest@71329995] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestScript.QALegendTicketTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
